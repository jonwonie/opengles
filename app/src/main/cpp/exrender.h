/* DO NOT EDIT THIS FILE - it is machine generated */

#ifndef __EXRENDER__
#define __EXRENDER__

#include <jni.h>
#include <android/log.h>
#include "glutils.h"

#define NATIVE_RENDER_CLASS "pub/sweets/opengles/ExRender"


#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT void JNICALL init(JNIEnv *, jobject, jint);

JNIEXPORT void JNICALL release(JNIEnv *, jobject);

JNIEXPORT void JNICALL onSurfaceCreated(JNIEnv *, jobject);

JNIEXPORT void JNICALL onSurfaceChanged(JNIEnv *, jobject, jint, jint);

JNIEXPORT void JNICALL onDrawFrame(JNIEnv *, jobject);

static JNINativeMethod nativeMethods[] = {
        {"init",             "(I)V",  (void *) (init)},
        {"release",          "()V",   (void *) (release)},
        {"onSurfaceCreated", "()V",   (void *) (onSurfaceCreated)},
        {"onSurfaceChanged", "(II)V", (void *) (onSurfaceChanged)},
        {"onDrawFrame",      "()V",   (void *) (onDrawFrame)},
};

static int
registerNativeMethods(JNIEnv *env, const char *className, JNINativeMethod *methods, int methodNum) {
    jclass clazz = env->FindClass(className);
    if (clazz == NULL) {
        return JNI_FALSE;
    }
    if (env->RegisterNatives(clazz, methods, methodNum) < 0) {
        return JNI_FALSE;
    }
    return JNI_TRUE;
}

static void UnregisterNativeMethods(JNIEnv *env, const char *className) {
    jclass clazz = env->FindClass(className);
    if (clazz == NULL) {
        return;
    }
    if (env != NULL) {
        env->UnregisterNatives(clazz);
    }
}

jint JNI_OnLoad(JavaVM *jvm, void *p) {
    jint jniRet = JNI_ERR;
    JNIEnv *env = NULL;
    if (jvm->GetEnv((void **) (&env), JNI_VERSION_1_6) != JNI_OK) {
        return jniRet;
    }

    jint regRet = registerNativeMethods(env, NATIVE_RENDER_CLASS, nativeMethods,
                                        sizeof(nativeMethods) /
                                        sizeof(nativeMethods[0]));
    if (regRet != JNI_TRUE) {
        return JNI_ERR;
    }

    return JNI_VERSION_1_6;
}

void JNI_OnUnload(JavaVM *jvm, void *p) {
    JNIEnv *env = NULL;
    if (jvm->GetEnv((void **) (&env), JNI_VERSION_1_6) != JNI_OK) {
        return;
    }

    UnregisterNativeMethods(env, NATIVE_RENDER_CLASS);
}

#ifdef __cplusplus
}
#endif


#endif
